<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.core.mapper.UserRolesMapper">
    <resultMap id="BaseResultMap" type="com.ssm.core.entity.UserRoles">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="role_id" property="roleId" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="roles" property="roles" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, role_id, username, roles
  </sql>

    <select id="getRolesByUsername" resultType="java.lang.String" parameterType="java.lang.String">
        select roles from cux_user_roles where username = #{userName}
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from cux_user_roles
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cux_user_roles
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.ssm.core.entity.UserRoles">
    insert into cux_user_roles (id, user_id, role_id, 
      username, roles)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, 
      #{username,jdbcType=VARCHAR}, #{roles,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.ssm.core.entity.UserRoles">
        insert into cux_user_roles
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="roles != null">
                roles,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="roles != null">
                #{roles,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ssm.core.entity.UserRoles">
        update cux_user_roles
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="roles != null">
                roles = #{roles,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ssm.core.entity.UserRoles">
    update cux_user_roles
    set user_id = #{userId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      roles = #{roles,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>