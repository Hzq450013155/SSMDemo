<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.0.xsd"
       default-lazy-init="true">

    <description>Shiro Configuration</description>

    <!-- 加载配置属性文件 -->
    <!--<context:property-placeholder ignore-unresolvable="true" location="classpath:shaio.properties"/>-->
    <!-- Shiro权限过滤过滤器定义 -->
    <!--<bean name="shiroFilterChainDefinitions" class="java.lang.String">-->
    <!--<constructor-arg>-->
    <!--<value>-->
    <!--/static/** = anon-->
    <!--/userfiles/** = anon-->
    <!--${adminPath}/login = authc-->
    <!--${adminPath}/logout = logout-->
    <!--${adminPath}/** = user-->
    <!--</value>-->
    <!--</constructor-arg>-->
    <!--</bean>-->

    <!-- 安全认证过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login.html"/>
        <property name="unauthorizedUrl" value="/403.html"/>
        <!--<property name="loginUrl" value="${adminPath}/login"/>-->
        <!--<property name="successUrl" value="${adminPath}?login"/>-->
        <property name="filters">
            <map>
                <!--<entry key="cas" value-ref="casFilter"/>-->
                <!--<entry key="authc" value-ref="formAuthenticationFilter"/>-->
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /login.html = anon
                /* = authc
            </value>
            <!--<ref bean="shiroFilterChainDefinitions"/>-->
        </property>
    </bean>

    <!-- 定义Shiro安全管理配置 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--<property name="realm" ref="systemAuthorizingRealm" />-->
        <property name="realm" ref="Realm"/>
        <!--session管理器-->
        <property name="sessionManager" ref="sessionManager"/>
        <!--缓存管理器-->
        <property name="cacheManager" ref="shiroCacheManager"/>
    </bean>

    <!--自定义的Realm-->
    <bean id="Realm" class="com.ssm.security.SystemAuthcRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>

    <!--凭证验证-->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"></property>
        <property name="hashIterations" value="1"></property>
    </bean>

    <!-- 自定义会话管理配置 -->
    <bean id="sessionManager" class="com.ssm.session.SystemSessionManager">
        <property name="sessionDAO" ref="sessionDAO"/>

        <!-- 会话超时时间，单位：毫秒  -->
        <property name="globalSessionTimeout" value="600"/>

        <!-- 定时清理失效会话, 清理用户直接关闭浏览器造成的孤立会话   -->
        <property name="sessionValidationInterval" value="600"/>
        <!--<property name="sessionValidationSchedulerEnabled" value="false"/>-->
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <property name="sessionIdCookieEnabled" value="true"/>
    </bean>

    <!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID,
        当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg name="name" value="shiro.session.id"/>
    </bean>

    <bean id="sessionDAO" class="com.ssm.session.RedisSessionDAO">
        <!--<property name="sessionIdGenerator" ref="idGen"/>-->
        <!--<property name="activeSessionsCacheName" value="activeSessionsCache"/>-->
        <!--<property name="cacheManager" ref="shiroCacheManager"/>-->
    </bean>

    <!--定义授权缓存管理器 这里用的是redis-->
    <bean id="shiroCacheManager" class="com.ssm.cache.RedisCacheManager"/>
    <!--<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">-->
    <!--<property name="cacheManager" ref="cacheManager"/>-->
    <!--</bean>-->

    <!-- 配置 Bean 后置处理器:保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- AOP式方法级权限检查 放在springMVC管理 -->
    <!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"-->
    <!--depends-on="lifecycleBeanPostProcessor">-->
    <!--<property name="proxyTargetClass" value="true"/>-->
    <!--</bean>-->
    <!--<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">-->
    <!--<property name="securityManager" ref="securityManager"/>-->
    <!--</bean>-->

</beans>