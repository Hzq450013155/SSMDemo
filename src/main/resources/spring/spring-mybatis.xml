<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!--  关联jdbc.properties -->
    <context:property-placeholder location="classpath:dbconfig.properties"/>
    <!--01.配置数据源 -->
    <bean name="dataSource1" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="0"/>
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="50"/>
        <!-- 连接池最大空闲 -->
        <!--<property name="maxIdle" value="20"/>-->
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="1"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="33"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 1000-->
        <property name="timeBetweenEvictionRunsMillis" value="1000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒  5分钟 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true"/>
        <!-- 14400秒，也就是240分钟 -->
        <property name="removeAbandonedTimeout" value="14400"/>
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true"/>

        <!-- Oracle连接是获取字段注释 -->
        <property name="connectProperties">
            <props>
                <prop key="remarksReporting">true</prop>
            </props>
        </property>
    </bean>

    <bean name="dataSource2" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url2}"/>
        <property name="username" value="${jdbc.username2}"/>
        <property name="password" value="${jdbc.password2}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="0"/>
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="50"/>
        <!-- 连接池最大空闲 -->
        <!--<property name="maxIdle" value="20"/>-->
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="1"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="33"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 1000-->
        <property name="timeBetweenEvictionRunsMillis" value="1000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒  5分钟 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true"/>
        <!-- 14400秒，也就是240分钟 -->
        <property name="removeAbandonedTimeout" value="14400"/>
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true"/>

        <!-- Oracle连接是获取字段注释 -->
        <property name="connectProperties">
            <props>
                <prop key="remarksReporting">true</prop>
            </props>
        </property>
    </bean>
    <!-- 数据源集合 -->
    <bean id="dataSource_mybatis" class="com.ssm.datasource.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="com.ssm.datasource.DataSourceType">
                <entry key="dataSource1" value-ref="dataSource1"/>
                <entry key="dataSource2" value-ref="dataSource2"/>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="dataSource1"/>
    </bean>

    <!--=======================================================-->
    <!-- 02.配置SessionFactory -->
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource_mybatis"></property>
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
        <!--扫描mapping（。xml）-->
        <property name="mapperLocations" value="classpath:mapping/*.xml"></property>
        <!-- 注意其他配置 -->
        <!--<property name="plugins">-->
        <!--<array>-->
        <!--<bean class="com.github.pagehelper.PageInterceptor">-->
        <!--<property name="properties">-->
        <!--&lt;!&ndash;使用下面的方式配置参数，一行配置一个 &ndash;&gt;-->
        <!--<value>-->
        <!--helperDialect=mysql-->
        <!--offsetAsPageNum=true-->
        <!--rowBoundsWithCount=true-->
        <!--reasonable=false-->
        <!--</value>-->
        <!--</property>-->
        <!--</bean>-->
        <!--</array>-->
        <!--</property>-->
    </bean>


    <!-- 配置扫描器，将mybatis接口的实现加入到ioc容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描所有dao接口的实现，加入到ioc容器中 -->
        <property name="basePackage" value="com.ssm.core.mapper"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <!--mybatis整合配置结束-->


    <!--=======================================================-->


    <!-- 06.配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource_mybatis"></property>
    </bean>
    <!--开启注解事务配置-->
    <tx:annotation-driven transaction-manager="transactionManager"/>


    <!--&lt;!&ndash;01.配置数据源 &ndash;&gt;-->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
    <!--<property name="driverClass" value="${jdbc.driverClass}"></property>-->
    <!--<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>-->
    <!--<property name="user" value="${jdbc.user}"></property>-->
    <!--<property name="password" value="${jdbc.password}"></property>-->
    <!--</bean>-->
    <!--&lt;!&ndash;&lt;!&ndash; initialSize初始化时建立物理连接的个数0  maxActive最大连接池数量8 minIdle最小连接池数量0&ndash;&gt;&ndash;&gt;-->

    <!--&lt;!&ndash;=======================================================&ndash;&gt;-->
    <!--&lt;!&ndash; 02.配置SessionFactory &ndash;&gt;-->
    <!--&lt;!&ndash; spring和MyBatis完美整合，不需要mybatis的配置映射文件 &ndash;&gt;-->
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
    <!--<property name="dataSource" ref="dataSource"></property>-->
    <!--&lt;!&ndash;<property name="configLocation" value="classpath:mybatis-config.xml"></property>&ndash;&gt;-->
    <!--&lt;!&ndash;扫描mapping（。xml）&ndash;&gt;-->
    <!--<property name="mapperLocations" value="classpath:mapping/*.xml"></property>-->
    <!--</bean>-->


    <!--&lt;!&ndash; 配置扫描器，将mybatis接口的实现加入到ioc容器中 &ndash;&gt;-->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
    <!--&lt;!&ndash;扫描所有dao接口的实现，加入到ioc容器中 &ndash;&gt;-->
    <!--<property name="basePackage" value="com.ssm.core.mapper"></property>-->
    <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>-->
    <!--</bean>-->

    <!--&lt;!&ndash;mybatis整合配置结束&ndash;&gt;-->


    <!--&lt;!&ndash;=======================================================&ndash;&gt;-->


    <!--&lt;!&ndash; 06.配置事务管理器 &ndash;&gt;-->
    <!--<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
    <!--<property name="dataSource" ref="dataSource"></property>-->
    <!--</bean>-->
    <!--&lt;!&ndash;开启注解事务配置&ndash;&gt;-->
    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->


    <!-- 07.配置开启事务操作 -->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
    <!--<tx:attributes>-->
    <!--&lt;!&ndash;指定在连接方法上应用的事务属性 &ndash;&gt;-->
    <!--<tx:method name="add*" isolation="DEFAULT" propagation="REQUIRED"/>-->
    <!--&lt;!&ndash; 添加事务管理的方法 &ndash;&gt;-->
    <!--<tx:method name="save*" propagation="REQUIRED"/>-->
    <!--<tx:method name="delete*" propagation="REQUIRED"/>-->
    <!--<tx:method name="update*" propagation="REQUIRED"/>-->
    <!--<tx:method name="select*" read-only="true"/>-->
    <!--<tx:method name="insert*" propagation="REQUIRED"/>-->
    <!--<tx:method name="remove*" propagation="REQUIRED"/>-->
    <!--<tx:method name="find*" propagation="SUPPORTS"/>-->
    <!--<tx:method name="get*" propagation="SUPPORTS"/>-->
    <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!--&lt;!&ndash; aop配置 &ndash;&gt;-->
    <!--<aop:config>-->
    <!--<aop:pointcut expression="execution(* *..service.*.*(..))" id="stockPointcut"/>-->
    <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="stockPointcut"/>-->
    <!--<aop:advisor advice-ref="txAdvice" pointcut="execution(* com..*Impl.*(..))" order="2"/>-->
    <!--</aop:config>-->

</beans>